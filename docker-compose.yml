version: '2.1'
services:
  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    ports:
      - 15672:15672

  config:
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
    image: aydarik/family-config
    restart: always

  registry:
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
    image: aydarik/family-registry
    restart: always
    depends_on:
      config:
        condition: service_healthy
    ports:
      - 8761:3000

  gateway:
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
    image: aydarik/family-gateway
    restart: always
    depends_on:
      config:
        condition: service_healthy
    ports:
      - 80:4000

  auth-service:
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      ACCOUNT_SERVICE_PASSWORD: $ACCOUNT_SERVICE_PASSWORD
      MONGODB_PASSWORD: $MONGODB_PASSWORD
    image: aydarik/family-auth-service
    restart: always
    depends_on:
      config:
        condition: service_healthy

  auth-mongodb:
    environment:
      MONGODB_PASSWORD: $MONGODB_PASSWORD
    image: aydarik/family-mongodb
    restart: always
    depends_on:
      config:
        condition: service_healthy

  account-service:
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
      ACCOUNT_SERVICE_PASSWORD: $ACCOUNT_SERVICE_PASSWORD
      MONGODB_PASSWORD: $MONGODB_PASSWORD
    image: aydarik/family-account-service
    restart: always
    depends_on:
      config:
        condition: service_healthy

  account-mongodb:
    environment:
      INIT_DUMP: account-service-dump.js
      MONGODB_PASSWORD: $MONGODB_PASSWORD
    image: aydarik/family-mongodb
    restart: always
    depends_on:
      config:
        condition: service_healthy

  monitoring:
    environment:
      CONFIG_SERVICE_PASSWORD: $CONFIG_SERVICE_PASSWORD
    image: aydarik/family-monitoring
    restart: always
    depends_on:
      config:
        condition: service_healthy
    ports:
      - 9000:8080
      - 8989:8989

  ## ELK CONFIGURATION
  filebeat:
    image: docker.elastic.co/beats/filebeat:6.1.1
    restart: always
    command: filebeat -e -strict.perms=false
    volumes:
      - ./elk/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    user: root
    depends_on:
      - logstash

  logstash:
    image: docker.elastic.co/logstash/logstash:6.1.1
    restart: always
    ports:
      - 5044:5044
    volumes:
      - ./elk/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./elk/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    depends_on:
      - elasticsearch

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.1.1
    restart: always
    ports:
      - 9200:9200
    volumes:
#      - ./elk/elasticsearch/data:/usr/share/elasticsearch/data:rw
      - ./elk/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro

  kibana:
    image: docker.elastic.co/kibana/kibana:6.1.1
    restart: always
    ports:
      - 5601:5601
    volumes:
      - ./elk/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    depends_on:
      - elasticsearch

  curator:
    build: elk/curator
#      args:
#        - HTTP_PROXY=$HTTP_PROXY
#        - HTTPS_PROXY=$HTTPS_PROXY
    restart: always
    depends_on:
      - elasticsearch